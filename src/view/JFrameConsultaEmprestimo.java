package view;

import controller.LogTrack;
import controller.ResultSetTableModel;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.CopiaObra;
import model.Emprestimo;
import model.Usuario;


public class JFrameConsultaEmprestimo extends javax.swing.JFrame {

    private Usuario cliente;
    private CopiaObra copiaObra;
    private boolean disconnectOnClose;
    private String query; // = "SELECT emp.cod_emprestimo as ID, us.nome_completo as Nome, emp.data_emprestimo as 'Data Empréstimo', emp.data_devolucao as 'Data Devolucao', emp.valor_multa as Multa, emp.cod_copia_obra as 'Obra Literária' FROM emprestimo as emp, usuario as us WHERE emp.cod_usuario = us.cod_usuario ORDER BY emp.cod_usuario";
    private ResultSetTableModel result;
    private TableRowSorter<TableModel> filter;
    private boolean jFrameParaAtendimento;
    
    public JFrameConsultaEmprestimo(boolean disconnectOnClose, Usuario cliente) throws SQLException {
        initComponents();
        
        setTitle("Consulta de Empréstimos");
        
        this.disconnectOnClose = disconnectOnClose;
        
        this.cliente = cliente;
        if(this.cliente != null) {
            jButtonAdicionar.setEnabled(false);
            jButtonApagarCliente.setEnabled(false);
            jButtonBuscar.setEnabled(false);
            jButtonDevolucao.setEnabled(false);
            jButtonSelecionarCliente.setEnabled(false);
            jTextFieldCliente.setText(this.cliente.getNomeCompleto());
            jTextFieldCliente.setEnabled(false);
        }
        
        setQuery();
        
        result = new ResultSetTableModel(this.query);
        jTableConsulta.setModel(result);
        
        filter = new TableRowSorter<TableModel>(result);
        jTableConsulta.setRowSorter(filter);
    }
    
    private void setQuery() {
            
        this.query = "SELECT emp.cod_emprestimo as ID, us.nome_completo as Nome, emp.data_emprestimo as 'Data Empréstimo', emp.data_devolucao as 'Data Devolucao', emp.valor_multa as Multa, emp.cod_copia_obra as 'Obra Literária' FROM emprestimo as emp, usuario as us WHERE emp.cod_usuario = us.cod_usuario";      
        
        if(cliente != null) {
            this.query += " AND emp.cod_usuario = " + cliente.getCodUsuario();
        }
        
        this.query += " ORDER BY emp.cod_usuario";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsulta = new javax.swing.JTable();
        jLabelFiltro = new javax.swing.JLabel();
        jTextFieldFiltro = new javax.swing.JTextField();
        jButtonFiltrar = new javax.swing.JButton();
        jButtonDevolucao = new javax.swing.JButton();
        jButtonAdicionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCliente = new javax.swing.JTextField();
        jButtonSelecionarCliente = new javax.swing.JButton();
        jButtonApagarCliente = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTableConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableConsulta);

        jLabelFiltro.setText("Filtro:");

        jButtonFiltrar.setText("Filtrar");
        jButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarActionPerformed(evt);
            }
        });

        jButtonDevolucao.setText("Devolução");
        jButtonDevolucao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolucaoActionPerformed(evt);
            }
        });

        jButtonAdicionar.setText("Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cliente");

        jButtonSelecionarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/search-icon.png"))); // NOI18N
        jButtonSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarClienteActionPerformed(evt);
            }
        });

        jButtonApagarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/eraser-icon.png"))); // NOI18N
        jButtonApagarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarClienteActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonApagarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelFiltro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFiltrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                        .addComponent(jButtonDevolucao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAdicionar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonBuscar))
                    .addComponent(jButtonApagarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelecionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFiltrar)
                    .addComponent(jButtonDevolucao)
                    .addComponent(jButtonAdicionar)
                    .addComponent(jLabelFiltro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
        System.out.println("Filtrar");
        
        String filtro = jTextFieldFiltro.getText();
        
        if (filtro.isEmpty()) {
            filter.setRowFilter(null);
        } else {
            filter.setRowFilter(RowFilter.regexFilter(filtro));
        }
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jButtonDevolucaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolucaoActionPerformed
        int row = jTableConsulta.getSelectedRow();
        if(row != -1) {
            System.out.println("Alterar");
            
            int codigo = (int) result.getValueAt(row, 0);
            
            Emprestimo emprestimo = new Emprestimo();
            emprestimo.setCodEmprestimo(codigo);
            
            
            try {
                emprestimo.load();
                
                JFrameEmprestimoCRUD crud;
                crud = new JFrameEmprestimoCRUD(emprestimo, false);
                crud.setTitle("Realizar Devolução");
                
                crud.addWindowListener( new java.awt.event.WindowAdapter(){
                        @Override
                        public void windowClosed(java.awt.event.WindowEvent evt) {
                             System.out.println("Atualizar");
                             try {
                                 result.setQuery(query);
                             } catch ( Exception ex ) {
                                 ex.printStackTrace();
                             }
                        }
                    } );

                crud.setVisible( true );
            } catch( Exception ex ) {
                ex.printStackTrace();
            }            
        }
    }//GEN-LAST:event_jButtonDevolucaoActionPerformed

    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed
        System.out.println("Adicionar");

        try {
            JFrameEmprestimoCRUD crud;
            crud = new JFrameEmprestimoCRUD(null, false);
            crud.setTitle("Realizar Empréstimo");

            crud.addWindowListener(new java.awt.event.WindowAdapter(){
                    @Override
                    public void windowClosed(java.awt.event.WindowEvent evt) {
                         System.out.println("Atualizar");
                         try {
                             result.setQuery( query );
                         } catch (Exception ex) {
                             ex.printStackTrace();
                         }
                    }
                });

            crud.setVisible( true );
        } catch(Exception ex) {
            LogTrack.getInstance().addException(ex, true, this);
        }
    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(this.disconnectOnClose) {
            System.out.println("Desconectar.");
            result.disconnectFromDatabase();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButtonSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarClienteActionPerformed
        // TODO add your handling code here:
        try {
            if(cliente == null) {
                cliente = new Usuario();
            }
            
            JFrameConsultaUsuario jFrameConsulta;
            jFrameConsulta = new JFrameConsultaUsuario(true, false, cliente);
            
            jFrameConsulta.addWindowListener(new java.awt.event.WindowAdapter(){
                @Override
                public void windowClosed(java.awt.event.WindowEvent evt) {
                    if( cliente.getNomeCompleto() != null ) {
                        jTextFieldCliente.setText(cliente.getNomeCompleto());
                    }
                }
            });
            
            jFrameConsulta.setVisible(true);
        } catch(Exception ex) {
            LogTrack.getInstance().addException(ex, true, this);
            cliente = null;
        }
    }//GEN-LAST:event_jButtonSelecionarClienteActionPerformed

    private void jButtonApagarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarClienteActionPerformed
        // TODO add your handling code here:
        cliente = null;
        jTextFieldCliente.setText(null);
    }//GEN-LAST:event_jButtonApagarClienteActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        try {
            setQuery();            
            result.setQuery(query);
        } catch (Exception ex) {
            LogTrack.getInstance().addException(ex, true, this);
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameConsultaEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameConsultaEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameConsultaEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameConsultaEmprestimo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameConsultaEmprestimo(true, null).setVisible(true);
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JButton jButtonApagarCliente;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonDevolucao;
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JButton jButtonSelecionarCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConsulta;
    private javax.swing.JTextField jTextFieldCliente;
    private javax.swing.JTextField jTextFieldFiltro;
    // End of variables declaration//GEN-END:variables
}
